T1 = go(p(20,20)), T2 = go(p(1,1)), T3 = go(p(4,10)), solve_task(T1, _, _), solve_task(T2, _, _), solve_task(T3, _, _).
join_game(A), reset_game, start_game, find_identity(A).
join_game(As, 5), reset_game, start_game, solve_maze.


Plans


Task 2:

% Find locations of all recharge Stations
% Go to closest oracle and ask question (-1/10 Energy)
% Check if enough energy to go to station
% If you dont then just go to closest oracle and keep going until energy runs out
% If you do then find next closest oracle and check if we still have enough energy to get back to a charge station
    % If you wouldnt be able to get back to charge station then go straight to charge station
    % If you would then repeat the same prrocess (check closest oracle and if that would make it to charge staiton too)
    % When you eventually go to charge station then go to closest unvisited oracle and repeat process again


Task 3:

% 1 Agent
% Check if in bottom cornerr
% If you are then exit maze otherwise do following:

% Find all options to start with
% Add current pos to a list called decisions
% If more than 1 option thats not in completed
    % Add current position to list called decisions
    % Move to a one of the new positions

% Else if 1 option thats not in completed
    % Add current pos to list called completed
    % And move to the new position
    % Repeat from beggining
% Else 
    % Add current pos to list called completed
    % Find path to the closest node thats in decision and then repeat from beginning

% Multi Agents
% Check if any agent is in bottom corner
% If you are then exit maze and repeatedly find agent with shortest path to exit and move them until all exited
% otherwise do following:

% Find all options to start with
% If more than 1 option thats not in completed
    % Add current position to list called decisions
    % Move to a one of the new positions

% Else if 1 option thats not in completed
    % Add current pos to list called completed
    % And move to the new position
    % Repeat from beggining
% Else 
    % Add current pos to list called completed
    % Find path to the closest node thats in decision and then repeat from beginning
    % If there are no paths to decision node (blocked by an agent)
        % Set move = []
